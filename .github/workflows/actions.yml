name: Django On-demand Server Deploy
run-name: roll-pe Backend CI/CD - ${{ github.actor }}

on:
  push:
    branches: "dev"

jobs:
  ci:
    name: "Django CI"
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    env:
        project-working-directory: ./rollpe

    steps:
    - uses: actions/checkout@v4

    - name: Matrix Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.4.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Make Virtual Environment
      run: |
        python -m venv .venv
        source .venv/bin/activate
        
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    - name: Make .env file
      run: |
        touch ./.env
        echo "${{ secrets.ENV_FILE }}" > ./.env
        cat ./.env
      working-directory: ${{ env.project-working-directory }}

    - name: Run Django Test - Jeongmingz Part (Paper Application)
      if: github.actor == 'jeongmingz' && github.reqository == 'jeongmingz/roll-pe-api'
      run: |
        python3 manage.py test paper
      working-directory: ${{ env.project-working-directory }}


    - name: Run Django Test - jjjheeee Part (User Application)
      if: github.actor == 'jjjheeee' && github.reqository == 'jjjheeee/roll-pe-api'
      run: |
        python3 manage.py test user
      working-directory: ${{ env.project-working-directory }}

    - name: Run Django Test - chanung-ki Part (Heart Application)
      if: github.actor == 'chanung-ki' && github.reqository == 'chanung-ki/roll-pe-api'
      run: |
        python3 manage.py test heart
      working-directory: ${{ env.project-working-directory }}

    - name: Run Django Test - Main Repository
      if : github.repository == 'Team-Exiters/roll-pe-api'
      run: |
        python3 manage.py test
      working-directory: ${{ env.project-working-directory }}

      
  cd: 
    name: "rollpe Test Server CD"
    needs: ci
    if: github.event_name == 'push' && github.repository == 'Team-Exiters/roll-pe-api'
    runs-on: ubuntu-22.04

    steps:
      - name: Test Server SSH Connection Test
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script_stop: true
          script: |
            cd rollpe/roll-pe-api
            git pull origin dev
            cd rollpe
            source .venv/bin/activate
            pip3 install -r ../requirements.txt
            sudo systemctl restart gunicorn-app2.service




          
